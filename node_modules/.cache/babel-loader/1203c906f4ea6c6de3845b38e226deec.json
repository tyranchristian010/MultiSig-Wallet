{"ast":null,"code":"import _regeneratorRuntime from \"/Users/admin/Desktop/GITHUB2021/multisig_wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/admin/Desktop/GITHUB2021/multisig_wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/admin/Desktop/GITHUB2021/multisig_wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/admin/Desktop/GITHUB2021/multisig_wallet/src/components/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport Header from './Header';\nimport NewTransfer from './NewTransfer';\nimport { getWeb3, getWallet } from './utils';\n\nfunction App() {\n  var _useState = useState(undefined),\n      _useState2 = _slicedToArray(_useState, 2),\n      web3 = _useState2[0],\n      setWeb3 = _useState2[1];\n\n  var _useState3 = useState(undefined),\n      _useState4 = _slicedToArray(_useState3, 2),\n      accounts = _useState4[0],\n      setAccounts = _useState4[1];\n\n  var _useState5 = useState(undefined),\n      _useState6 = _slicedToArray(_useState5, 2),\n      wallet = _useState6[0],\n      setWallet = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      approvers = _useState8[0],\n      setApprovers = _useState8[1];\n\n  var _useState9 = useState(undefined),\n      _useState10 = _slicedToArray(_useState9, 2),\n      quorum = _useState10[0],\n      setQuorum = _useState10[1];\n\n  useEffect(function () {\n    var init =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var web3, accounts, wallet, approvers, quorum;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                web3 = getWeb3();\n                _context.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context.sent;\n                _context.next = 6;\n                return getWallet(web3);\n\n              case 6:\n                wallet = _context.sent;\n                _context.next = 9;\n                return wallet.methods.getApprovers().call();\n\n              case 9:\n                approvers = _context.sent;\n                _context.next = 12;\n                return wallet.methods.quorum().call();\n\n              case 12:\n                quorum = _context.sent;\n                setWeb3(web3);\n                setAccounts(accounts);\n                setWallet(wallet);\n                setApprovers(approvers);\n                setQuorum(quorum.toNumber());\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function init() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    init();\n  }, []);\n\n  if (typeof web3 === 'undefined' || typeof accounts === 'undefined' || typeof wallet === 'undefined') {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Loading...\");\n  }\n\n  var createTransfer = function createTransfer(transfer) {\n    wallet.methods.createTransfer(transfer.amount, transfer.to).send({\n      from: accounts[0],\n      gas: 1000000\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Multisig Dapp\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Header, {\n    approvers: approvers,\n    quorum: quorum,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(NewTransfer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/admin/Desktop/GITHUB2021/multisig_wallet/src/components/App.js"],"names":["React","useEffect","useState","Header","NewTransfer","getWeb3","getWallet","App","undefined","web3","setWeb3","accounts","setAccounts","wallet","setWallet","approvers","setApprovers","quorum","setQuorum","init","eth","getAccounts","methods","getApprovers","call","toNumber","createTransfer","transfer","amount","to","send","from","gas"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,SAAnC;;AAGA,SAASC,GAAT,GAAe;AAAA,kBACWL,QAAQ,CAACM,SAAD,CADnB;AAAA;AAAA,MACNC,IADM;AAAA,MACAC,OADA;;AAAA,mBAEmBR,QAAQ,CAACM,SAAD,CAF3B;AAAA;AAAA,MAENG,QAFM;AAAA,MAEIC,WAFJ;;AAAA,mBAGeV,QAAQ,CAACM,SAAD,CAHvB;AAAA;AAAA,MAGNK,MAHM;AAAA,MAGEC,SAHF;;AAAA,mBAIqBZ,QAAQ,CAAC,EAAD,CAJ7B;AAAA;AAAA,MAINa,SAJM;AAAA,MAIKC,YAJL;;AAAA,mBAKed,QAAQ,CAACM,SAAD,CALvB;AAAA;AAAA,MAKNS,MALM;AAAA,MAKEC,SALF;;AAUbjB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMkB,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACLV,gBAAAA,IADK,GACEJ,OAAO,EADT;AAAA;AAAA,uBAEYI,IAAI,CAACW,GAAL,CAASC,WAAT,EAFZ;;AAAA;AAELV,gBAAAA,QAFK;AAAA;AAAA,uBAGUL,SAAS,CAACG,IAAD,CAHnB;;AAAA;AAGLI,gBAAAA,MAHK;AAAA;AAAA,uBAIaA,MAAM,CAACS,OAAP,CAAeC,YAAf,GAA8BC,IAA9B,EAJb;;AAAA;AAILT,gBAAAA,SAJK;AAAA;AAAA,uBAKUF,MAAM,CAACS,OAAP,CAAeL,MAAf,GAAwBO,IAAxB,EALV;;AAAA;AAKLP,gBAAAA,MALK;AAUXP,gBAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,gBAAAA,WAAW,CAACD,QAAD,CAAX;AACAG,gBAAAA,SAAS,CAACD,MAAD,CAAT;AACAG,gBAAAA,YAAY,CAACD,SAAD,CAAZ;AACAG,gBAAAA,SAAS,CAACD,MAAM,CAACQ,QAAP,EAAD,CAAT;;AAdW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAJN,IAAI;AAAA;AAAA;AAAA,OAAV;;AAiBAA,IAAAA,IAAI;AACL,GAnBQ,EAmBN,EAnBM,CAAT;;AAqBA,MACE,OAAOV,IAAP,KAAgB,WAAhB,IACG,OAAOE,QAAP,KAAoB,WADvB,IAEG,OAAOE,MAAP,KAAkB,WAHvB,EAKE;AACA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AACD,MAAMa,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,QAAQ,EAAI;AACjCd,IAAAA,MAAM,CAACS,OAAP,CACGI,cADH,CACkBC,QAAQ,CAACC,MAD3B,EACmCD,QAAQ,CAACE,EAD5C,EAEGC,IAFH,CAEQ;AAACC,MAAAA,IAAI,EAAEpB,QAAQ,CAAC,CAAD,CAAf;AAAoBqB,MAAAA,GAAG,EAAE;AAAzB,KAFR;AAGD,GAJD;;AAOA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEjB,SAAnB;AAA8B,IAAA,MAAM,EAAEE,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAJJ,CADF;AAaD;;AAED,eAAeV,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Header from './Header';\nimport NewTransfer from './NewTransfer';\nimport { getWeb3, getWallet } from './utils'; \n\n\nfunction App() {\n  const [web3, setWeb3] = useState(undefined);\n  const [accounts, setAccounts] = useState(undefined);\n  const [wallet, setWallet] = useState(undefined);\n  const [approvers, setApprovers] = useState([]);\n  const [quorum, setQuorum] = useState(undefined);\n\n  \n\n\n  useEffect(() => {\n    const init = async () => {\n      const web3 = getWeb3();\n      const accounts = await web3.eth.getAccounts();\n      const wallet = await getWallet(web3);\n      const approvers = await wallet.methods.getApprovers().call();\n      const quorum = await wallet.methods.quorum().call();\n      \n      \n\n     \n      setWeb3(web3);\n      setAccounts(accounts);\n      setWallet(wallet);\n      setApprovers(approvers);\n      setQuorum(quorum.toNumber());\n    };\n\n    init();\n  }, []);\n\n  if(\n    typeof web3 === 'undefined'\n    || typeof accounts === 'undefined'\n    || typeof wallet === 'undefined'\n   \n  ) {\n    return <div>Loading...</div>;\n  }\n  const createTransfer = transfer => {\n    wallet.methods\n      .createTransfer(transfer.amount, transfer.to)\n      .send({from: accounts[0], gas: 1000000});\n  }\n\n\n  return (\n    <div>\n        <div>\n        Multisig Dapp \n        </div>\n        <div>\n          <Header approvers={approvers} quorum={quorum} />\n          <NewTransfer/>\n        </div>\n    </div>\n    \n   \n  );\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}